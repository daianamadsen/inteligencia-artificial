/**
 * INTELIGENCIA ARTIFICIAL
 * Preprocesador
 * 
 * JUAN VALACCO - LU 
 * DAIANA MADSEN - LU 246826
 * Facultad de Cs. Exactas - UNICEN - Tandil
 */

package ui;

import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import static preprocessor.Preprocessor.preprocess;

/**
 * User Interface
 * Provee una interfaz para obtener un archivo .arff a partir de un archivo .csv
 * Se proveen dos opciones de procesamiento: generos como atributos individuales, generos por grupos predefinidos.
 * 
 * @author Juan Valacco
 * @author Daiana Madsen
 */
public class UserInterface extends javax.swing.JDialog {
    
    private static final String FILENAME = "dataSet";
    private static final String ARFF = ".arff";

    /**
     * Creates new form UserInterface
     * @param parent
     * @param modal
     */
    public UserInterface(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();//Icono de la aplicación
        URL icono = getClass().getResource("/ui/app-icono.png");
        setIconImage(Toolkit.getDefaultToolkit().getImage(icono));
        setLocationRelativeTo(null);//Centra form
        resultado.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rb = new javax.swing.ButtonGroup();
        panel_1 = new javax.swing.JPanel();
        titulo_1 = new javax.swing.JLabel();
        linea_1 = new javax.swing.JLabel();
        panel_2 = new javax.swing.JPanel();
        titulo_2 = new javax.swing.JLabel();
        ds_subtitulo = new javax.swing.JLabel();
        ds_origen = new javax.swing.JTextField();
        ds_boton = new javax.swing.JButton();
        df_subtitulo = new javax.swing.JLabel();
        df_destino = new javax.swing.JTextField();
        df_boton = new javax.swing.JButton();
        panel_3 = new javax.swing.JPanel();
        titulo_3 = new javax.swing.JLabel();
        rb_individual = new javax.swing.JRadioButton();
        rb_individual_2 = new javax.swing.JRadioButton();
        rb_grupal = new javax.swing.JRadioButton();
        rb_reducido = new javax.swing.JRadioButton();
        panel_4 = new javax.swing.JPanel();
        preprocesar = new javax.swing.JButton();
        resultado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preprocesador");

        panel_1.setBackground(new java.awt.Color(234, 234, 234));

        titulo_1.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        titulo_1.setForeground(new java.awt.Color(213, 118, 0));
        titulo_1.setText("Preprocesador");

        linea_1.setBackground(new java.awt.Color(51, 51, 51));
        linea_1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        linea_1.setForeground(new java.awt.Color(51, 51, 51));
        linea_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(213, 118, 0)));
        linea_1.setIconTextGap(1);
        linea_1.setMaximumSize(new java.awt.Dimension(1, 1));
        linea_1.setMinimumSize(new java.awt.Dimension(1, 1));
        linea_1.setPreferredSize(new java.awt.Dimension(1, 1));

        panel_2.setBackground(new java.awt.Color(234, 234, 234));

        titulo_2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        titulo_2.setForeground(new java.awt.Color(99, 99, 99));
        titulo_2.setText("Generación de un archivo .arff a partir de un dataset .csv");

        ds_subtitulo.setForeground(new java.awt.Color(99, 99, 99));
        ds_subtitulo.setText("Origen: DataSet (.csv)");

        ds_origen.setEditable(false);
        ds_origen.setBackground(new java.awt.Color(255, 255, 255));
        ds_origen.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        ds_origen.setForeground(new java.awt.Color(102, 102, 102));
        ds_origen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ds_boton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/btn-browser.png"))); // NOI18N
        ds_boton.setBorder(null);
        ds_boton.setBorderPainted(false);
        ds_boton.setContentAreaFilled(false);
        ds_boton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ds_boton.setFocusPainted(false);
        ds_boton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ds_boton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/btn-browser-active.png"))); // NOI18N
        ds_boton.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        ds_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ds_botonActionPerformed(evt);
            }
        });

        df_subtitulo.setForeground(new java.awt.Color(99, 99, 99));
        df_subtitulo.setText("Destino: Path para el archivo (.arff)");

        df_destino.setEditable(false);
        df_destino.setBackground(new java.awt.Color(255, 255, 255));
        df_destino.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        df_destino.setForeground(new java.awt.Color(102, 102, 102));
        df_destino.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        df_boton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/btn-browser.png"))); // NOI18N
        df_boton.setBorder(null);
        df_boton.setBorderPainted(false);
        df_boton.setContentAreaFilled(false);
        df_boton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        df_boton.setFocusPainted(false);
        df_boton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        df_boton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/btn-browser-active.png"))); // NOI18N
        df_boton.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        df_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                df_botonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_2Layout = new javax.swing.GroupLayout(panel_2);
        panel_2.setLayout(panel_2Layout);
        panel_2Layout.setHorizontalGroup(
            panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_2Layout.createSequentialGroup()
                .addGroup(panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(df_destino)
                    .addComponent(ds_origen, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 0, 0)
                .addGroup(panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ds_boton)
                    .addComponent(df_boton, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(panel_2Layout.createSequentialGroup()
                .addGroup(panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titulo_2)
                    .addComponent(ds_subtitulo)
                    .addComponent(df_subtitulo))
                .addGap(0, 71, Short.MAX_VALUE))
        );
        panel_2Layout.setVerticalGroup(
            panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_2Layout.createSequentialGroup()
                .addComponent(titulo_2)
                .addGap(18, 18, 18)
                .addComponent(ds_subtitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ds_origen, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ds_boton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(df_subtitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(df_destino, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(df_boton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_3.setBackground(new java.awt.Color(234, 234, 234));

        titulo_3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        titulo_3.setForeground(new java.awt.Color(99, 99, 99));
        titulo_3.setText("Tipo de procesamiento:");

        rb_individual.setBackground(new java.awt.Color(234, 234, 234));
        rb.add(rb_individual);
        rb_individual.setForeground(new java.awt.Color(99, 99, 99));
        rb_individual.setText("Géneros como atributos individuales");
        rb_individual.setToolTipText("Se toman todos los géneros como distintos atributos del dataset, y se indica si tiene el género o no.");

        rb_individual_2.setBackground(new java.awt.Color(234, 234, 234));
        rb.add(rb_individual_2);
        rb_individual_2.setForeground(new java.awt.Color(99, 99, 99));
        rb_individual_2.setSelected(true);
        rb_individual_2.setText("Géneros como atributos individuales (con datos no disponibles)");
        rb_individual_2.setToolTipText("Se toman todos los géneros como distintos atributos del dataset, y se indica si tiene el género. Si no lo tiene se coloca un signo de interrogación.");

        rb_grupal.setBackground(new java.awt.Color(234, 234, 234));
        rb.add(rb_grupal);
        rb_grupal.setForeground(new java.awt.Color(99, 99, 99));
        rb_grupal.setText("Géneros agrupados como único atributo");
        rb_grupal.setToolTipText("Se agrupan los géneros en seis clases que serán los valores que puede tomar el atributo género.");

        rb.add(rb_reducido);
        rb_reducido.setForeground(new java.awt.Color(99, 99, 99));
        rb_reducido.setText("Atributos reducidos");
        rb_reducido.setToolTipText("Se agrupan los géneros en seis tipos, se eliminan atributos (actor, director y año) y se agrupan las valoraciones en malas, regulares y buenas.");

        javax.swing.GroupLayout panel_3Layout = new javax.swing.GroupLayout(panel_3);
        panel_3.setLayout(panel_3Layout);
        panel_3Layout.setHorizontalGroup(
            panel_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_3Layout.createSequentialGroup()
                .addGroup(panel_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titulo_3)
                    .addGroup(panel_3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rb_individual)
                            .addComponent(rb_grupal)
                            .addComponent(rb_reducido)
                            .addComponent(rb_individual_2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_3Layout.setVerticalGroup(
            panel_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo_3)
                .addGap(18, 18, 18)
                .addComponent(rb_individual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_individual_2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_grupal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_reducido)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        panel_4.setBackground(new java.awt.Color(234, 234, 234));

        preprocesar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/btn-preprocesar.png"))); // NOI18N
        preprocesar.setBorder(null);
        preprocesar.setBorderPainted(false);
        preprocesar.setContentAreaFilled(false);
        preprocesar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        preprocesar.setFocusPainted(false);
        preprocesar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        preprocesar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/btn-preprocesar-active.png"))); // NOI18N
        preprocesar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        preprocesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preprocesarActionPerformed(evt);
            }
        });

        resultado.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        resultado.setForeground(new java.awt.Color(213, 118, 0));
        resultado.setText("Listo!");

        javax.swing.GroupLayout panel_4Layout = new javax.swing.GroupLayout(panel_4);
        panel_4.setLayout(panel_4Layout);
        panel_4Layout.setHorizontalGroup(
            panel_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultado)
                    .addComponent(preprocesar)))
        );
        panel_4Layout.setVerticalGroup(
            panel_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(preprocesar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_1Layout = new javax.swing.GroupLayout(panel_1);
        panel_1.setLayout(panel_1Layout);
        panel_1Layout.setHorizontalGroup(
            panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_1Layout.createSequentialGroup()
                        .addGroup(panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panel_2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(linea_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panel_1Layout.createSequentialGroup()
                                .addComponent(panel_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(16, 16, 16)
                                .addComponent(panel_4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(20, 20, 20))
                    .addGroup(panel_1Layout.createSequentialGroup()
                        .addComponent(titulo_1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panel_1Layout.setVerticalGroup(
            panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(titulo_1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linea_1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(panel_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showFileChooser(String title, javax.swing.JTextField path, boolean directory) {
        JFileChooser chooser = new JFileChooser(); 
        chooser.setCurrentDirectory(new java.io.File(".")); //Posición inicial
        chooser.setDialogTitle(title);
        chooser.setAcceptAllFileFilterUsed(false); //No permite selección múltiple
        if (directory) {
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        } else {
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.CSV", "csv");
            chooser.setFileFilter(filter);
        }
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            path.setText(chooser.getSelectedFile().toString()+"\\"); 
        }
    }
    
    private void ds_botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ds_botonActionPerformed
        showFileChooser("DataSet origen", ds_origen, false);
    }//GEN-LAST:event_ds_botonActionPerformed

    private void df_botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_df_botonActionPerformed
        showFileChooser("Path para el archivo destino", df_destino, true);
    }//GEN-LAST:event_df_botonActionPerformed
 
    private String rename(String destino) {
        String fileName = FILENAME;
        boolean exist = true;
        int n = 0;
        while (exist) {
            fileName = FILENAME +"("+ ++n +")";
            Path path = Paths.get(destino+fileName+ARFF);
            exist = Files.exists(path);
        }
        return destino+fileName+ARFF;
    }
    
    private String completarDestino(String destino) {
        String fullPath = destino+FILENAME+ARFF;
        Path path = Paths.get(fullPath);
        if (Files.exists(path)) {
            if (JOptionPane.NO_OPTION == (JOptionPane.showConfirmDialog(new JFrame(), "¿Sobreescribir el archivo destino?", FILENAME+ARFF+" ya existe", JOptionPane.YES_NO_OPTION))) {
                //Rename
                fullPath = rename(destino);
            }
        }
        return fullPath;
    }
    
    private int obtenerTipoProcesamiento() {
        if (rb_individual.isSelected()) {
            return 1;
        }
        if (rb_individual_2.isSelected()) {
            return 2;
        }
        if (rb_grupal.isSelected()) {
            return 3;
        }
        if (rb_reducido.isSelected()) {
            return 4;
        }
        return 0;
    }
    
    private void preprocesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preprocesarActionPerformed
        resultado.setText("");
        String origen = ds_origen.getText();
        String destino = df_destino.getText();
        if (origen.isEmpty() || destino.isEmpty()) {
            JOptionPane.showMessageDialog(new JFrame(), "Falta elegir origen y/o destino.");
        } else {
            String result = "Error";
            destino = completarDestino(destino);
            if (!destino.equals("")) {
                try {
                    if (preprocess(origen, destino, obtenerTipoProcesamiento())) {
                        result = "Listo!";
                    }
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            resultado.setText(result);
        }
    }//GEN-LAST:event_preprocesarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            OUTER:
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (null != info.getName()) {
                    switch (info.getName()) {
                        case "GTK+":
                            javax.swing.UIManager.setLookAndFeel(info.getClassName());
                            break OUTER;
                        case "Windows":
                            javax.swing.UIManager.setLookAndFeel(info.getClassName());
                            break OUTER;
                    }
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                UserInterface dialog = new UserInterface(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton df_boton;
    private javax.swing.JTextField df_destino;
    private javax.swing.JLabel df_subtitulo;
    private javax.swing.JButton ds_boton;
    private javax.swing.JTextField ds_origen;
    private javax.swing.JLabel ds_subtitulo;
    private javax.swing.JLabel linea_1;
    private javax.swing.JPanel panel_1;
    private javax.swing.JPanel panel_2;
    private javax.swing.JPanel panel_3;
    private javax.swing.JPanel panel_4;
    private javax.swing.JButton preprocesar;
    private javax.swing.ButtonGroup rb;
    private javax.swing.JRadioButton rb_grupal;
    private javax.swing.JRadioButton rb_individual;
    private javax.swing.JRadioButton rb_individual_2;
    private javax.swing.JRadioButton rb_reducido;
    public javax.swing.JLabel resultado;
    private javax.swing.JLabel titulo_1;
    public javax.swing.JLabel titulo_2;
    public javax.swing.JLabel titulo_3;
    // End of variables declaration//GEN-END:variables

}
